// Filename: build.gradle
// Author: Olivier Sirol <czo@free.fr>
// License: GPL-2.0 (http://www.gnu.org/copyleft)
// File Created: avril 2012
// Last Modified: Tuesday 13 August 2024, 16:02
// Edit Time: 1:56:22
// Description: app build.gradle

apply plugin: 'com.android.application'

println("")
def keystorePropertiesFile = rootProject.file("local.properties")
def keystoreProperties = new Properties()
def canSign = false
if (keystorePropertiesFile.exists()) {
    canSign = true
    println("-> release will be signed.")
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

int minutesSinceEpoch = System.currentTimeMillis() / 1000 / 60
String buildDateYMD = new java.text.SimpleDateFormat("yyyyMMdd").format(new java.util.Date(System.currentTimeMillis()))

def gitVersionName = "git -C ${rootDir} describe --tags --long".execute().text.trim()

android {
    namespace 'org.czo.badumtsss'
    compileSdk 34
    defaultConfig {
        applicationId "org.czo.badumtsss"
        minSdkVersion 9
        targetSdkVersion 34
        versionCode minutesSinceEpoch

        println("-> gitVersionName:   " + gitVersionName)
        setProperty("versionName", "${gitVersionName}".replaceAll(/-.*/,''))
        println("-> versionName:      " + versionName)
        println("-> versionCode:      " + minutesSinceEpoch)
        setProperty("archivesBaseName", "${applicationId}-${buildDateYMD}")
        println("-> archivesBaseName: " + archivesBaseName)
        println("")
    }

    if (canSign) {
        signingConfigs {
            release {
                storeFile file(keystoreProperties['key.store'])
                storePassword keystoreProperties['key.store.password']
                keyAlias keystoreProperties['key.alias']
                keyPassword keystoreProperties['key.alias.password']
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (canSign) {
                signingConfig signingConfigs.release
            }
        }
    }

    //tasks.withType(JavaCompile) { options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
